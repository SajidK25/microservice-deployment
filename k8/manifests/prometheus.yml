apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: microservices
data:
  prometheus.yml: |
    scrape_configs:
      - job_name: 'product-service'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 3s
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - microservices
          selectors:
          - role: pod
            label: "app=product-service"
      - job_name: 'user-service'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 3s
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - microservices
          selectors:
          - role: pod
            label: "app=user-service"
      - job_name: 'order-service'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 3s
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - microservices
          selectors:
          - role: pod
            label: "app=order-service"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: microservices
  labels:
    app: prometheus
spec:
  serviceAccountName: microservices-sa
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      securityContext:
        runAsNonRoot: true
      containers:
      - name: prometheus
        image: prom/prometheus:v2.44.0
        resources:
          limits:
            memory: "500Mi"
            cpu: "500m"
          requests:
            memory: "300Mi"
            cpu: "100m"
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        ports:
        - containerPort: 9090
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: microservices
spec:
  selector:
    app: prometheus
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090
  type: ClusterIP